// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Cobalt.Tests
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// RecordedMethod1
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            WpfTreeItem uIItemTreeItem1 = this.UIMainWindowWindow.UIChannelsTree.UIItemTreeItem.UIItemTreeItem1;
            WpfTreeItem uIItemTreeItem11 = this.UIMainWindowWindow.UIChannelsTree.UIItemTreeItem.UIItemTreeItem11;
            WpfTreeItem uIItemTreeItem12 = this.UIMainWindowWindow.UIChannelsTree.UIItemTreeItem1;
            WpfTreeItem uIItemTreeItem121 = this.UIMainWindowWindow.UIChannelsTree.UIItemTreeItem.UIItemTreeItem12;
            #endregion

            // Click  ->  tree item
            Mouse.Click(uIItemTreeItem1, new Point(41, 6));

            // Click  ->  tree item
            Mouse.Click(uIItemTreeItem11, new Point(64, 12));

            // Click tree item numbered 2 in 'Channels' tree item
            Mouse.Click(uIItemTreeItem12, new Point(60, 14));

            // Move  ->  tree item to  ->  tree item
            uIItemTreeItem121.EnsureClickable(new Point(69, 22));
            Mouse.StartDragging(uIItemTreeItem1, new Point(56, 7));
            Mouse.StopDragging(uIItemTreeItem121, new Point(69, 22));
        }
        
        /// <summary>
        /// ExpandCollapseServer - Use 'ExpandCollapseServerParams' to pass parameters into this method.
        /// </summary>
        public void ExpandCollapseServer()
        {
            #region Variable Declarations
            WpfTreeItem uIItemTreeItem1 = this.UIMainWindowWindow.UIChannelsTree.UIItemTreeItem.UIItemTreeItem1;
            WpfTreeItem uIItemTreeItem11 = this.UIMainWindowWindow.UIChannelsTree.UIItemTreeItem.UIItemTreeItem11;
            WpfTreeItem uIItemTreeItem12 = this.UIMainWindowWindow.UIChannelsTree.UIItemTreeItem1;
            WpfTreeItem uIItemTreeItem = this.UIMainWindowWindow.UIChannelsTree.UIItemTreeItem;
            #endregion

            // Click  ->  tree item
            Mouse.Click(uIItemTreeItem1, new Point(41, 6));

            // Click  ->  tree item
            Mouse.Click(uIItemTreeItem11, new Point(64, 12));

            // Click tree item numbered 2 in 'Channels' tree item
            Mouse.Click(uIItemTreeItem12, new Point(60, 14));

            // Move  ->  tree item to  ->  tree item
            uIItemTreeItem11.EnsureClickable(new Point(69, 22));
            Mouse.StartDragging(uIItemTreeItem1, new Point(56, 7));
            Mouse.StopDragging(uIItemTreeItem11, new Point(69, 22));

            // Collapse tree item
            uIItemTreeItem.Expanded = this.ExpandCollapseServerParams.UIItemTreeItemExpanded;
        }
        
        #region Properties
        public virtual ExpandCollapseServerParams ExpandCollapseServerParams
        {
            get
            {
                if ((this.mExpandCollapseServerParams == null))
                {
                    this.mExpandCollapseServerParams = new ExpandCollapseServerParams();
                }
                return this.mExpandCollapseServerParams;
            }
        }
        
        public UIMainWindowWindow UIMainWindowWindow
        {
            get
            {
                if ((this.mUIMainWindowWindow == null))
                {
                    this.mUIMainWindowWindow = new UIMainWindowWindow();
                }
                return this.mUIMainWindowWindow;
            }
        }
        #endregion
        
        #region Fields
        private ExpandCollapseServerParams mExpandCollapseServerParams;
        
        private UIMainWindowWindow mUIMainWindowWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ExpandCollapseServer'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class ExpandCollapseServerParams
    {
        
        #region Fields
        /// <summary>
        /// Collapse tree item
        /// </summary>
        public bool UIItemTreeItemExpanded = false;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIMainWindowWindow : WpfWindow
    {
        
        public UIMainWindowWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "MainWindow";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIChannelsTree UIChannelsTree
        {
            get
            {
                if ((this.mUIChannelsTree == null))
                {
                    this.mUIChannelsTree = new UIChannelsTree(this);
                }
                return this.mUIChannelsTree;
            }
        }
        #endregion
        
        #region Fields
        private UIChannelsTree mUIChannelsTree;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIChannelsTree : WpfTree
    {
        
        public UIChannelsTree(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTree.PropertyNames.AutomationId] = "Channels";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIItemTreeItem UIItemTreeItem
        {
            get
            {
                if ((this.mUIItemTreeItem == null))
                {
                    this.mUIItemTreeItem = new UIItemTreeItem(this);
                }
                return this.mUIItemTreeItem;
            }
        }
        
        public WpfTreeItem UIItemTreeItem1
        {
            get
            {
                if ((this.mUIItemTreeItem1 == null))
                {
                    this.mUIItemTreeItem1 = new WpfTreeItem(this);
                    #region Search Criteria
                    this.mUIItemTreeItem1.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "2";
                    this.mUIItemTreeItem1.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIItemTreeItem1;
            }
        }
        #endregion
        
        #region Fields
        private UIItemTreeItem mUIItemTreeItem;
        
        private WpfTreeItem mUIItemTreeItem1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemTreeItem : WpfTreeItem
    {
        
        public UIItemTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfTreeItem UIItemTreeItem1
        {
            get
            {
                if ((this.mUIItemTreeItem1 == null))
                {
                    this.mUIItemTreeItem1 = new WpfTreeItem(this);
                    #region Search Criteria
                    this.mUIItemTreeItem1.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIItemTreeItem1.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
                    this.mUIItemTreeItem1.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIItemTreeItem1;
            }
        }
        
        public WpfTreeItem UIItemTreeItem11
        {
            get
            {
                if ((this.mUIItemTreeItem11 == null))
                {
                    this.mUIItemTreeItem11 = new WpfTreeItem(this);
                    #region Search Criteria
                    this.mUIItemTreeItem11.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "2";
                    this.mUIItemTreeItem11.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIItemTreeItem11.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIItemTreeItem11;
            }
        }
        
        public WpfTreeItem UIItemTreeItem12
        {
            get
            {
                if ((this.mUIItemTreeItem12 == null))
                {
                    this.mUIItemTreeItem12 = new WpfTreeItem(this);
                    #region Search Criteria
                    this.mUIItemTreeItem12.SearchProperties[WpfTreeItem.PropertyNames.Instance] = "2";
                    this.mUIItemTreeItem12.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIItemTreeItem12.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIItemTreeItem12;
            }
        }
        #endregion
        
        #region Fields
        private WpfTreeItem mUIItemTreeItem1;
        
        private WpfTreeItem mUIItemTreeItem11;
        
        private WpfTreeItem mUIItemTreeItem12;
        #endregion
    }
}
